{"version":3,"file":"component---src-pages-blog-js-b09a9786aeca11609312.js","mappings":"iOAkCMA,EAAUC,EAAAA,QAAAA,QAAAA,WAAH,yDAAGA,CAAH,qxCA+Hb,EA1Ja,SAAC,GAA6B,EAA3BC,QAA4B,IAAnBC,EAAkB,EAAlBA,YACfC,EAAkED,EAAlEC,MAAOC,EAA2DF,EAA3DE,MAAOC,EAAoDH,EAApDG,KAAMC,EAA8CJ,EAA9CI,KAAMC,EAAwCL,EAAxCK,SAAUC,EAA8BN,EAA9BM,SAAUC,EAAoBP,EAApBO,gBACtD,OACE,gBAACV,EAAD,KACA,gBAAC,KAAD,CAAMW,GAAE,UAAYL,EAAQM,UAAU,QACpC,gBAAC,EAAAC,EAAD,CAAaR,OAAOS,EAAAA,EAAAA,GAAST,GAAQU,IAAKX,EAAOQ,UAAU,SAE7D,gBAAC,KAAD,CAAMD,GAAE,UAAYL,EAAQM,UAAU,QACpC,uBAAKA,UAAU,QACb,wBAAMA,UAAU,iBAAiBJ,GACjC,sBAAII,UAAU,cAAcR,GAC5B,uBAAKQ,UAAU,cACf,yBAAIF,GAEJ,8BACE,wBAAME,UAAU,QACd,gBAAC,MAAD,CAAYA,UAAU,SACrBL,GAEH,4BAAOE,EAAP,kBCIV,EAnBmB,WACjB,IACYO,GACRC,EAAAA,EAAAA,IAXK,cAUPC,OAAUF,SAEZ,OACE,sBAAIJ,UAAU,cACXI,EAASG,KAAI,SAACX,EAAUY,GACvB,OACE,sBAAIC,IAAKD,GACP,gBAAC,KAAD,CAAMT,GAAE,IAAMH,EAAYI,UAAU,YACjCJ,SCNTR,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,wDAAGA,CAAH,+UA+Bb,EA3Ca,SAAC,GAAa,IAAZqB,EAAW,EAAXA,MACX,OACI,gBAAC,EAAD,KACI,uBAAKV,UAAU,SACf,uBAAKA,UAAU,SACf,0BAAKU,GACL,uBAAKV,UAAU,YCIrBZ,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,yRAuBb,EA/ByB,WACvB,OACE,gBAAC,EAAD,KACA,gBAAC,EAAD,CAAMqB,MAAM,eACZ,gBAAC,EAAD,QCgDEtB,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,0VA+Bb,EA7De,WACb,IAGmBsB,GAHNN,EAAAA,EAAAA,IArBJ,cAwBPC,OAAUM,MAGZ,OACE,gBAAC,EAAD,KACE,gBAAC,EAAD,CAAMF,MAAM,WACXC,EAAMJ,KAAI,SAAAM,GACT,MAAqCA,EAAKtB,YAAlCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,KAAMF,EAA3B,EAA2BA,MAC3B,OACE,gBAAC,KAAD,CAAMM,GAAE,UAAYL,EAAQe,IAAKI,EAAKC,GAAId,UAAU,QAClD,gBAAC,EAAAC,EAAD,CACER,OAAOS,EAAAA,EAAAA,GAAST,GAChBU,IAAKX,EACLQ,UAAU,QAEZ,2BACE,0BAAKR,GACL,yBAAIG,UCnCZP,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,gGAcb,EAvBoB,WAChB,OACI,gBAAC,EAAD,KACA,gBAAC,EAAD,CAAMqB,MAAM,UACZ,8DCQFtB,EAAUC,EAAAA,QAAAA,MAAAA,WAAH,0DAAGA,CAAH,sOAwBb,EAlCe,WACX,OACI,gBAAC,EAAD,KACA,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,EAAD,QCaR,EApBkB,SAAC,GAAsB,IAApBsB,EAAmB,EAAnBA,MAAOnB,EAAY,EAAZA,MAC1B,OACE,2BAASQ,UAAU,SACjB,sBAAIA,UAAU,eAAeR,GAC7B,uBAAKQ,UAAU,gBAEb,+BACGW,EAAMJ,KAAI,SAAAM,GACT,OAAO,gBAAC,EAAD,eAAMJ,IAAKI,EAAKC,IAAQD,QAInC,+BACE,gBAAC,EAAD,W,uDCWV,IAbY,SAAC,GAA4B,IAA1BrB,EAAyB,EAAzBA,MAAOuB,EAAkB,EAAlBA,YACZC,GAASX,EAAAA,EAAAA,IAZR,cAYDW,KAEFC,EAAkBF,GAAeC,EAAKE,aAAaH,YACzD,OACE,gBAAC,IAAD,CACEI,eAAgB,CAAEC,KAAM,MACxB5B,MAAUA,EAAL,MAAgBwB,EAAKE,aAAa1B,MACvC6B,KAAM,CAAC,CAAEC,KAAK,cAAgBC,QAASN,Q,iFCsC7C,UAtDa,SAAC,GAAc,IAAZO,EAAW,EAAXA,KACdC,QAAQC,IAAIF,GACZ,IACmBb,EACfa,EADFlB,OAAUM,MAEZ,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKpB,MAAM,SACX,0BAAQQ,UAAU,QAChB,gBAAC,EAAA2B,EAAD,CACEC,IAAI,2BACJzB,IAAI,WACJH,UAAU,WACV6B,YAAY,YACZC,OAAO,YALT,qBAOA,uBAAK9B,UAAU,kBACb,uBAAKA,UAAU,aACb,2CACA,8BAIN,gBAAC,IAAD,CAAWW,MAAOA,EAAOnB,MAAM,0B","sources":["webpack://gatsby-starter-hello-world/./src/components/BlogPosts/Post.js","webpack://gatsby-starter-hello-world/./src/components/Categories.js","webpack://gatsby-starter-hello-world/./src/components/Banner/Dash.js","webpack://gatsby-starter-hello-world/./src/components/Banner/BannerCategories.js","webpack://gatsby-starter-hello-world/./src/components/Banner/Recent.js","webpack://gatsby-starter-hello-world/./src/components/Banner/Description.js","webpack://gatsby-starter-hello-world/./src/components/Banner/index.js","webpack://gatsby-starter-hello-world/./src/components/BlogPosts/index.js","webpack://gatsby-starter-hello-world/./src/components/SEO.js","webpack://gatsby-starter-hello-world/./src/pages/blog.js"],"sourcesContent":["import React from 'react'\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\r\nimport { FaRegClock } from 'react-icons/fa'\r\nimport { IoMdArrowRoundForward } from 'react-icons/io'\r\nimport { Link } from 'gatsby'\r\nimport styled from 'styled-components'\r\n\r\nconst Post = ({ excerpt, frontmatter }) => {\r\n  const { title, image, slug, date, category, readTime, postDescription } = frontmatter\r\n  return (\r\n    <Wrapper>\r\n    <Link to={`/posts/${slug}`} className=\"link\">\r\n      <GatsbyImage image={getImage(image)} alt={title} className=\"img\" />\r\n    </Link>\r\n    <Link to={`/posts/${slug}`} className=\"link\">\r\n      <div className=\"info\">\r\n        <span className=\"post-category\">{category}</span>\r\n        <h3 className=\"post-title\">{title}</h3>\r\n        <div className=\"underline\"></div>\r\n        <p>{postDescription}</p>\r\n\r\n        <footer>\r\n          <span className=\"date\">\r\n            <FaRegClock className=\"icon\" />\r\n            {date}\r\n          </span>\r\n          <span>{readTime} min read</span>\r\n        </footer>\r\n      </div>\r\n    </Link>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.article`\r\n  margin-bottom: 3rem;\r\n  background: #333538;\r\n  padding: 1rem 1rem;\r\n  border-radius: 5%;\r\n  transition: all 0.3s ease-in;\r\n\r\n  :hover {\r\n    background: #66A5AD;\r\n  }\r\n\r\n  .info {\r\n    text-align: center;\r\n  }\r\n  .img {\r\n    margin-bottom: 1rem;\r\n    border-radius: 10px;\r\n    height: 17rem;\r\n  }\r\n  .post-category {\r\n    display: inline-block;\r\n    margin-bottom: 1rem;\r\n    background: hsl(206, 33%, 96%);;\r\n    padding: 0.25rem 0.5rem;\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n    border-radius: 0.25rem;\r\n    letter-spacing: 0.1rem;\r\n    color: hsl(210, 22%, 49%);\r\n    transition: all 0.3s ease-in;\r\n    &:hover {\r\n      background: #0e2f44;\r\n      color: #249929;\r\n    }\r\n  }\r\n  h3 {\r\n    font-weight: 400;\r\n    margin-bottom: 1rem;\r\n    text-transform: initial;\r\n    font-size: 2rem;\r\n    transition: all 0.5s ease-out;\r\n  }\r\n  h3:hover {\r\n    border-color: #7fffd4;\r\n    color: #7fffd4;\r\n  }\r\n  .underline {\r\n    width: 100%;\r\n    height: 1px;\r\n    background: white;\r\n    margin: 0 auto;\r\n    margin-bottom: 1rem;\r\n  }\r\n  p {\r\n    color: white;\r\n    line-height: 1.8;\r\n  }\r\n  .link {\r\n    text-decoration: none;\r\n  }\r\n\r\n  /* .link {\r\n    text-transform: capitalize;\r\n    text-decoration: none;\r\n    letter-spacing: 0.1rem;\r\n    font-weight: 700;\r\n    color: white;\r\n    padding-bottom: 0.1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    svg {\r\n      margin-left: 0.25rem;\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n  .link:hover {\r\n    border-color: #7fffd4;\r\n    color: #7fffd4;\r\n  } */\r\n  footer {\r\n    margin-top: 1rem;\r\n    padding-top: 1rem;\r\n    border-top: 1px solid white;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    color: white;\r\n\r\n    & .date {\r\n      display: flex;\r\n      align-items: center;\r\n      & .icon {\r\n        color: white;\r\n        margin-right: 0.5rem;\r\n      }\r\n    }\r\n  }\r\n  @media (min-width: 600px) {\r\n    .img {\r\n      height: 20rem;\r\n    }\r\n  }\r\n  @media (min-width: 800px) {\r\n    .img {\r\n      height: 25rem;\r\n    }\r\n  }\r\n  @media (min-width: 992px) {\r\n    & {\r\n      display: grid;\r\n      grid-template-columns: 20rem 1fr;\r\n      column-gap: 1.5rem;\r\n      .info {\r\n        text-align: left;\r\n      }\r\n      .img {\r\n        height: 100%;\r\n        max-height: 20rem;\r\n      }\r\n      .underline {\r\n        margin-left: 0;\r\n        margin-right: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport { Link } from 'gatsby'\r\nconst query = graphql`\r\n  {\r\n    allMdx {\r\n      distinct(field: frontmatter___category)\r\n    }\r\n  }\r\n`\r\n\r\nconst Categories = () => {\r\n  const {\r\n    allMdx: { distinct },\r\n  } = useStaticQuery(query)\r\n  return (\r\n    <ul className=\"categories\">\r\n      {distinct.map((category, index) => {\r\n        return (\r\n          <li key={index}>\r\n            <Link to={`/${category}`} className=\"category\">\r\n              {category}\r\n            </Link>\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Categories\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Dash = ({value}) => {\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"fancy\">\r\n            <div className=\"line\"></div>\r\n            <h4>{value}</h4>\r\n            <div className=\"line\"></div>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  text-align: center;\r\n  margin-bottom: 1.25rem;\r\n  h4 {\r\n    color: white;\r\n    text-transform: uppercase;\r\n    font-weight: 500;\r\n    display: inline-block;\r\n    margin-bottom: 0;\r\n    padding: 0 0.6rem;\r\n    background: #141516;\r\n\r\n  }\r\n\r\n  .fancy {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    column-gap: 0.2rem;\r\n    align-items: center;\r\n  }\r\n  .line {\r\n\r\n    width: auto;\r\n    height: 2.5px;\r\n\r\n    background: #FFB6C1;\r\n\r\n\r\n`\r\n\r\nexport default Dash","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Categories from '../Categories'\r\nimport Dash from './Dash'\r\n\r\nconst BannerCategories = () => {\r\n  return (\r\n    <Wrapper>\r\n    <Dash value=\"Categories\" />\r\n    <Categories />\r\n    </Wrapper>\r\n  )\r\n}\r\nconst Wrapper = styled.div`\r\n\r\n  .categories {\r\n    list-style-type: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  .category {\r\n    font-size: 1rem;\r\n    color: white;\r\n    text-transform: capitalize;\r\n    display: block;\r\n    padding: 0.5rem 0.5rem;\r\n    transition: all 0.3s ease-in;\r\n    border-radius: 5%;\r\n    text-decoration: none;\r\n    background: #6FB98F;\r\n    \r\n    &:hover {\r\n      background: #A2C523;\r\n    }\r\n  }\r\n`\r\nexport default BannerCategories\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport { Link } from 'gatsby'\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\r\nimport Dash from './Dash'\r\n\r\nconst query = graphql`\r\n  {\r\n    allMdx(limit: 4, sort: { fields: frontmatter___date, order: DESC }, filter: {frontmatter: {isMdxPost: {eq: true}}}) {\r\n      nodes {\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"MMMM, Do YYYY\")\r\n          slug\r\n          image {\r\n            childImageSharp {\r\n              gatsbyImageData\r\n            }\r\n          }\r\n        }\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Recent = () => {\r\n  const data = useStaticQuery(query)\r\n\r\n  const {\r\n    allMdx: { nodes: posts },\r\n  } = data\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Dash value=\"recent\" />\r\n      {posts.map(post => {\r\n        const { title, slug, date, image } = post.frontmatter\r\n        return (\r\n          <Link to={`/posts/${slug}`} key={post.id} className=\"post\">\r\n            <GatsbyImage\r\n              image={getImage(image)}\r\n              alt={title}\r\n              className=\"img\"\r\n            ></GatsbyImage>\r\n            <div>\r\n              <h5>{title}</h5>\r\n              <p>{date}</p>\r\n            </div>\r\n          </Link>\r\n        )\r\n      })}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  .post {\r\n    display: grid;\r\n    grid-template-columns: 75px 1fr;\r\n    column-gap: 1rem;\r\n    margin-bottom: 0.5rem;\r\n    text-decoration: none;\r\n    padding: 0.5rem 0.5rem;\r\n    border-radius: 5%;\r\n  }\r\n  .img {\r\n    border-radius: 10%;\r\n  }\r\n  h5 {\r\n    font-size: 0.7rem;\r\n    margin-bottom: 0.25rem;\r\n    letter-spacing: 0;\r\n    line-height: 1.2;\r\n    \r\n    color: white;\r\n  }\r\n  p {\r\n    font-size: 0.6rem;\r\n    margin-bottom: 0;\r\n    color: white;\r\n  }\r\n  .post:hover {\r\n      background: #66A5AD;\r\n  }\r\n`\r\n\r\nexport default Recent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Dash from './Dash'\r\n\r\nconst Description = () => {\r\n    return (\r\n        <Wrapper>\r\n        <Dash value=\"About\" />\r\n        <p>Tech, Rants, and other Musings!</p>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: center;\r\n  p {\r\n    color: white;\r\n  }\r\n  .img {\r\n    border-radius: 50%;\r\n    margin: 0 auto;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n`\r\n\r\n\r\nexport default Description","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BannerCategories from './BannerCategories'\r\nimport Recent from './Recent'\r\nimport Description from './Description'\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <Wrapper>\r\n        <Description />\r\n        <Recent />\r\n        <BannerCategories />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.aside`\r\n\r\n  display: grid;\r\n  grid-template-columns: 200px;\r\n  justify-content: center;\r\n  row-gap: 0.75rem;\r\n  padding: 1rem 1rem;\r\n  border-radius: 5%;\r\n  background: #003B46;\r\n  @media (min-width: 576px) {\r\n    & {\r\n      // what autofit does is basically split up remaining available row-space into as many\r\n      // columns as possible, here we specify 200px width so that is the length it will look for\r\n\r\n      // so on mobile we will have it lay across in columns while for desktop\r\n      // it will sit vertically\r\n      grid-template-columns: repeat(auto-fit, 300px);\r\n      column-gap: 3rem;\r\n    }\r\n  }\r\n\r\n\r\n`\r\n\r\nexport default Banner;","import React from 'react'\r\nimport Post from './Post'\r\nimport Banner from \"../Banner\"\r\n\r\nconst BlogPosts = ({ posts, title }) => {\r\n  return (\r\n    <section className=\"posts\">\r\n      <h3 className=\"posts-title\">{title}</h3>\r\n      <div className=\"posts-center\">\r\n        {/* posts column */}\r\n        <article>\r\n          {posts.map(post => {\r\n            return <Post key={post.id} {...post} />\r\n          })}\r\n        </article>\r\n        {/* banner column */}\r\n        <article>\r\n          <Banner />\r\n        </article>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BlogPosts\r\n","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst query = graphql`\r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst SEO = ({ title, description }) => {\r\n  const { site } = useStaticQuery(query)\r\n  // if description isnt passed in as a prop, then use sitemetadata description in gatsby config\r\n  const metaDescription = description || site.siteMetadata.description \r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{ lang: \"en\" }}\r\n      title={`${title} | ${site.siteMetadata.title}`}\r\n      meta={[{ name: `description`, content: metaDescription }]}\r\n    ></Helmet>\r\n  )\r\n}\r\n\r\nexport default SEO","import React from \"react\"\r\nimport Layout from \"../components/Layout\"\r\nimport SEO from \"../components/SEO\"\r\nimport BlogPosts from \"../components/BlogPosts\"\r\nimport { graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Blog = ({ data }) => {\r\n  console.log(data)\r\n  const {\r\n    allMdx: { nodes: posts },\r\n  } = data\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Blog\" />\r\n      <header className=\"hero\">\r\n        <StaticImage\r\n          src=\"../assets/img/blogbg.jpg\"\r\n          alt=\"relaxing\"\r\n          className=\"hero-img\"\r\n          placeholder=\"tracedSVG\"\r\n          layout=\"fullWidth\"\r\n        ></StaticImage>\r\n        <div className=\"hero-container\">\r\n          <div className=\"hero-text\">\r\n            <h1>Personal Blog</h1>\r\n            <h4></h4>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <BlogPosts posts={posts} title=\"recently published\" />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  {\r\n    allMdx(\r\n      sort: { fields: frontmatter___date, order: DESC }\r\n      filter: { frontmatter: { isMdxPost: { eq: true } } }\r\n    ) {\r\n      nodes {\r\n        excerpt\r\n        frontmatter {\r\n          title\r\n          category\r\n          date(formatString: \"MMMM, Do YYYY\")\r\n          readTime\r\n          slug\r\n          postDescription\r\n          image {\r\n            childImageSharp {\r\n              gatsbyImageData\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Blog\r\n"],"names":["Wrapper","styled","excerpt","frontmatter","title","image","slug","date","category","readTime","postDescription","to","className","G","getImage","alt","distinct","useStaticQuery","allMdx","map","index","key","value","posts","nodes","post","id","description","site","metaDescription","siteMetadata","htmlAttributes","lang","meta","name","content","data","console","log","S","src","placeholder","layout"],"sourceRoot":""}