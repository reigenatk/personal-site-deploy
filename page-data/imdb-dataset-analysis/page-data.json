{
    "componentChunkName": "component---src-pages-contentful-project-project-name-js",
    "path": "/imdb-dataset-analysis/",
    "result": {"data":{"contentfulProject":{"link":"N/A","description":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This was the final project for CS225, in which I analyzed publicly avialable movie data on a site called IMDB. This involved 7 million movies and 10 million actors. I created graphs with movies + actors as nodes, and drew edges to analyze different relationship. A notable feature of this project is the Kevin Bacon search, in which users can enter the name of any actor and find a chain of movies from that actor to Kevin Bacon. In this project, we debunked the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Six_Degrees_of_Kevin_Bacon#:~:text=The%20Bacon%20number%20of%20an,Kevin%20Bacon%20the%20actor%20is.\"\n  }, \"Kevin Bacon Theory\"), \", finding that only 60% of actors had a distance less than or equal to 6 from Kevin Bacon.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"projectImage":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/ui971jbkxd2e/1MTZ22Ia60FG5CIog2Cl0y/4fada9c3dd9e7e9e96ca04c4fd18fdf3/imdb.PNG?w=124&h=17&q=50&fm=webp 124w,\nhttps://images.ctfassets.net/ui971jbkxd2e/1MTZ22Ia60FG5CIog2Cl0y/4fada9c3dd9e7e9e96ca04c4fd18fdf3/imdb.PNG?w=247&h=34&q=50&fm=webp 247w,\nhttps://images.ctfassets.net/ui971jbkxd2e/1MTZ22Ia60FG5CIog2Cl0y/4fada9c3dd9e7e9e96ca04c4fd18fdf3/imdb.PNG?w=494&h=67&q=50&fm=webp 494w","sizes":"(min-width: 494px) 494px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/ui971jbkxd2e/1MTZ22Ia60FG5CIog2Cl0y/4fada9c3dd9e7e9e96ca04c4fd18fdf3/imdb.PNG?w=494&h=67&q=50&fm=png","srcSet":"https://images.ctfassets.net/ui971jbkxd2e/1MTZ22Ia60FG5CIog2Cl0y/4fada9c3dd9e7e9e96ca04c4fd18fdf3/imdb.PNG?w=124&h=17&q=50&fm=png 124w,\nhttps://images.ctfassets.net/ui971jbkxd2e/1MTZ22Ia60FG5CIog2Cl0y/4fada9c3dd9e7e9e96ca04c4fd18fdf3/imdb.PNG?w=247&h=34&q=50&fm=png 247w,\nhttps://images.ctfassets.net/ui971jbkxd2e/1MTZ22Ia60FG5CIog2Cl0y/4fada9c3dd9e7e9e96ca04c4fd18fdf3/imdb.PNG?w=494&h=67&q=50&fm=png 494w","sizes":"(min-width: 494px) 494px, 100vw"}},"layout":"constrained","backgroundColor":"#181818","width":494,"height":67}},"content":{"tags":["C++"],"features":["BFS to find distance in unweighted graphs","Kosaraju's algorithm for SCCs","Dijkstra for shortest path","Large dataset processing in C++"]},"id":"0a44ab59-0eba-5e1a-a87d-a8eef9de61ce","devTime":"April 2021 - May 2021","githubLink":"https://github.com/reigenatk/IMDB-Dataset","projectName":"IMDB Dataset Analysis","shortDescription":"Kevin Bacon!"}},"pageContext":{"id":"0a44ab59-0eba-5e1a-a87d-a8eef9de61ce","projectName":"IMDB Dataset Analysis","__params":{"projectName":"imdb-dataset-analysis"}}},
    "staticQueryHashes": ["2468095761"]}