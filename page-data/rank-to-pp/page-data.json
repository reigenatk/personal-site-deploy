{
    "componentChunkName": "component---src-pages-contentful-project-project-name-js",
    "path": "/rank-to-pp/",
    "result": {"data":{"contentfulProject":{"link":"https://reigenatk.github.io/ranktoppv1/","description":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This site was the culmination of an online course I was taking on udemy at the time, about ReactJS. I thought it would be interesting to develop a site from scratch using the concepts I had learned! The site itself tracks global rankings in a free-to-play rhythm game for PC called osu!, which has millions of players. I myself play this game quite often so the data it tracks is actually quite interesting to me. I learned lots about APIs, databases, asynchronous javascript, and general web design!\"), mdx(\"p\", null, \"The main goal of this site was to see how quickly players are improving (since in this game, rankings are on a player versus player basis. Whoever has the most performance points or \\\"PP\\\" as people in osu! call it, has the highest ranking.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"projectImage":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/ui971jbkxd2e/2qhd0NLobi85QdXtxnnwR9/4e252dc2206e0eee84b8b3c5b23cd9d4/ranktopp.PNG?w=480&h=253&q=50&fm=webp 480w,\nhttps://images.ctfassets.net/ui971jbkxd2e/2qhd0NLobi85QdXtxnnwR9/4e252dc2206e0eee84b8b3c5b23cd9d4/ranktopp.PNG?w=960&h=506&q=50&fm=webp 960w,\nhttps://images.ctfassets.net/ui971jbkxd2e/2qhd0NLobi85QdXtxnnwR9/4e252dc2206e0eee84b8b3c5b23cd9d4/ranktopp.PNG?w=1920&h=1012&q=50&fm=webp 1920w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/ui971jbkxd2e/2qhd0NLobi85QdXtxnnwR9/4e252dc2206e0eee84b8b3c5b23cd9d4/ranktopp.PNG?w=1920&h=1012&q=50&fm=png","srcSet":"https://images.ctfassets.net/ui971jbkxd2e/2qhd0NLobi85QdXtxnnwR9/4e252dc2206e0eee84b8b3c5b23cd9d4/ranktopp.PNG?w=480&h=253&q=50&fm=png 480w,\nhttps://images.ctfassets.net/ui971jbkxd2e/2qhd0NLobi85QdXtxnnwR9/4e252dc2206e0eee84b8b3c5b23cd9d4/ranktopp.PNG?w=960&h=506&q=50&fm=png 960w,\nhttps://images.ctfassets.net/ui971jbkxd2e/2qhd0NLobi85QdXtxnnwR9/4e252dc2206e0eee84b8b3c5b23cd9d4/ranktopp.PNG?w=1920&h=1012&q=50&fm=png 1920w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","backgroundColor":"#080808","width":1920,"height":1012}},"content":{"tags":["HTML/CSS","MongoDB","NodeJS","ReactJS"],"features":["ChartJS to beautifully display chronological data","Exposing backend endpoints via nodeJS and asynchronous Javascript","Reading official API documentation, API Key storage and usage","Cron job package in nodeJS to keep track of time","General React Concepts (Components, Hooks, props, state)","Deployment of a ReactJS project via Heroku"]},"id":"a0d36f66-3433-553c-974c-cf4e67383485","devTime":"June 2020 - August 2020","githubLink":"https://reigenatk.github.io/ranktoppv1/","projectName":"Rank to PP","shortDescription":"My MERN stack application!"}},"pageContext":{"id":"a0d36f66-3433-553c-974c-cf4e67383485","projectName":"Rank to PP","__params":{"projectName":"rank-to-pp"}}},
    "staticQueryHashes": ["2468095761"]}