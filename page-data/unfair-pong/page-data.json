{
    "componentChunkName": "component---src-pages-contentful-project-project-name-js",
    "path": "/unfair-pong/",
    "result": {"data":{"contentfulProject":{"link":"N/A","description":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This was the final project for my CS 126 class: Software Design Studio. I made a pong game in C++ but instead of being easy, its extremely hard! The computer has the advantage! The graphics were made using the Cinder library.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"projectImage":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/ui971jbkxd2e/1dmQWCOavF0tlFd3H92ar5/236bfd648bc7d1f33f741d1a379cb6b2/unfairpong.png?w=197&h=193&q=50&fm=webp 197w,\nhttps://images.ctfassets.net/ui971jbkxd2e/1dmQWCOavF0tlFd3H92ar5/236bfd648bc7d1f33f741d1a379cb6b2/unfairpong.png?w=393&h=385&q=50&fm=webp 393w,\nhttps://images.ctfassets.net/ui971jbkxd2e/1dmQWCOavF0tlFd3H92ar5/236bfd648bc7d1f33f741d1a379cb6b2/unfairpong.png?w=786&h=770&q=50&fm=webp 786w","sizes":"(min-width: 786px) 786px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/ui971jbkxd2e/1dmQWCOavF0tlFd3H92ar5/236bfd648bc7d1f33f741d1a379cb6b2/unfairpong.png?w=786&h=770&q=50&fm=png","srcSet":"https://images.ctfassets.net/ui971jbkxd2e/1dmQWCOavF0tlFd3H92ar5/236bfd648bc7d1f33f741d1a379cb6b2/unfairpong.png?w=197&h=193&q=50&fm=png 197w,\nhttps://images.ctfassets.net/ui971jbkxd2e/1dmQWCOavF0tlFd3H92ar5/236bfd648bc7d1f33f741d1a379cb6b2/unfairpong.png?w=393&h=385&q=50&fm=png 393w,\nhttps://images.ctfassets.net/ui971jbkxd2e/1dmQWCOavF0tlFd3H92ar5/236bfd648bc7d1f33f741d1a379cb6b2/unfairpong.png?w=786&h=770&q=50&fm=png 786w","sizes":"(min-width: 786px) 786px, 100vw"}},"layout":"constrained","backgroundColor":"#080808","width":786,"height":770}},"content":{"tags":["C++"],"features":["Cinder for interactive graphics","OOP Concepts: Abstract classes, Inheritance, Virtual Methods","Class based-design: (ex: Generic bumper class and then top + bottom bumper inheriting from that)","Lots of debugging :("]},"id":"afd545f0-3fc7-59a7-9d8e-04c8d3b6c425","devTime":"April 2020 - May 2020","githubLink":"https://github.com/reigenatk/unfair-pong","projectName":"Unfair Pong","shortDescription":"Can you win?"}},"pageContext":{"id":"afd545f0-3fc7-59a7-9d8e-04c8d3b6c425","projectName":"Unfair Pong","__params":{"projectName":"unfair-pong"}}},
    "staticQueryHashes": ["2468095761"]}